# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:

  - name: 'gcr.io/cloud-builders/git'
    id: 'Clone repo'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git clone -b hyperdiskml-preload-model --single-branch https://github.com/epam/kubernetes-engine-samples.git

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        ls -la
        gcloud container clusters get-credentials ${_CLUSTER_NAME} --location=${_REGION}
        kubectl create secret generic hf-secret --from-literal=hf_api_token=${_HF_TOKEN} --dry-run=client -o yaml | kubectl apply -f -
        kubectl create -f kubernetes-engine-samples/ai-ml/hyperdisk/hyperdisk-ml-storage-class.yaml
        kubectl create -f kubernetes-engine-samples/ai-ml/hyperdisk/hyperdisk-producer-pvc.yaml
        kubectl apply -f kubernetes-engine-samples/ai-ml/hyperdisk/hyperdisk-preload-job.yaml

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    id: 'check_job_run'
    args:
      - '-c'
      - |
        echo "Waiting for job to complete"
        while true; do
          if [[ "$(kubectl get jobs producer-job-gpu -o=jsonpath='{.status.succeeded}')" == "1" ]]; then
            echo "Job completed successfully."
            break
          fi
          echo "Job is not yet complete. Waiting..."
          sleep 30
        done

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    waitFor:
      - 'check_job_run'
    args:
      - '-c'
      - |
        kubectl apply -f kubernetes-engine-samples/ai-ml/hyperdisk/hyperdisk-disk-image-vsc.yaml
        kubectl apply -f kubernetes-engine-samples/ai-ml/hyperdisk/hyperdisk-snapshot.yaml

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    id: 'check_snapshot_readines'
    args:
      - '-c'
      - |
        echo "Waiting for VolumeSnapshot to be ready..."
        while [[ "$(kubectl get volumesnapshot hyperdisk-snapshot -o=jsonpath='{.status.readyToUse}')" != "true" ]]; do
          echo "Snapshot not ready. Waiting..."
          sleep 30
        done
        echo "Snapshot is ready to use!"

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    waitFor:
      - 'check_snapshot_readines'
    args:
      - '-c'
      - |
        kubectl apply -f kubernetes-engine-samples/ai-ml/hyperdisk/hyperdisk-ml-multi-zone.yaml
        kubectl apply -f kubernetes-engine-samples/ai-ml/hyperdisk/hyperdisk-consumer-pvc.yaml
        kubectl apply -f kubernetes-engine-samples/ai-ml/hyperdisk/model-deployment.yaml
