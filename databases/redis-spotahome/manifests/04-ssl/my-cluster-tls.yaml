---
apiVersion: databases.spotahome.com/v1
kind: RedisFailover
metadata:
  name: my-cluster
spec:
  redis:
    replicas: 3
    affinity: &affinity
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
            - key: "app.stateful/component"
              operator: In
              values:
              - "redis-operator"
    tolerations: &tolerations
    - key: "app.stateful/component"
      operator: "Equal"
      value: "redis-operator"
      effect: NoSchedule
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: "topology.kubernetes.io/zone"
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          redisfailovers.databases.spotahome.com/name: my-cluster
          app.kubernetes.io/component: redis
    resources:
      requests:
        cpu: "1"
        memory: 4Gi
      limits:
        cpu: "2"
        memory: 4Gi
    exporter: 
      enabled: true
      image: oliver006/redis_exporter:v1.43.1
      args:
        - --include-system-metrics
        - --web.telemetry-path
        - /metrics
      env:
        - name: REDIS_EXPORTER_LOG_FORMAT
          value: txt
    extraVolumes:
    - name: certificate
      secret:
        secretName: redis-certificate
        optional: false
    extraVolumeMounts:
    - name: certificate
      mountPath: "/cert"
      readOnly: true
    customConfig:
      - "tls-cert-file /cert/fullchain.pem"
      - "tls-key-file /cert/privkey.pem"
      - "tls-ca-cert-file /cert/cacerts.pem"
      - "tls-cluster no"
      - "tls-auth-clients no"
      - "tls-replication no"
      - "tls-port 6380"
  sentinel:
    replicas: 3
    affinity: *affinity
    tolerations: *tolerations
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: "topology.kubernetes.io/zone"
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          redisfailovers.databases.spotahome.com/name: my-cluster
          app.kubernetes.io/component: sentinel
    resources:
      requests:
        cpu: 100m
        memory: 500Mi
      limits:
        cpu: 500m
        memory: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-my-cluster
spec:
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  - name: redis-tls
    port: 6380
    protocol: TCP
    targetPort: 6380
  selector:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: my-cluster
    redisfailovers-role: master
  type: ClusterIP

